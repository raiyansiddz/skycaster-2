"""Add comprehensive audit logging tables

Revision ID: 9ec8250584c4
Revises: 92504e1229b5
Create Date: 2025-07-19 04:20:41.736530

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9ec8250584c4'
down_revision: Union[str, Sequence[str], None] = '92504e1229b5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('request_id', sa.String(length=255), nullable=False),
    sa.Column('method', sa.String(length=10), nullable=False),
    sa.Column('endpoint', sa.String(length=500), nullable=False),
    sa.Column('full_url', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('api_key_id', sa.UUID(), nullable=True),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('request_headers', sa.JSON(), nullable=True),
    sa.Column('request_body', sa.Text(), nullable=True),
    sa.Column('request_params', sa.JSON(), nullable=True),
    sa.Column('request_size', sa.Integer(), nullable=True),
    sa.Column('response_status_code', sa.Integer(), nullable=True),
    sa.Column('response_headers', sa.JSON(), nullable=True),
    sa.Column('response_body', sa.Text(), nullable=True),
    sa.Column('response_size', sa.Integer(), nullable=True),
    sa.Column('processing_time_ms', sa.Float(), nullable=True),
    sa.Column('database_query_count', sa.Integer(), nullable=True),
    sa.Column('database_query_time_ms', sa.Float(), nullable=True),
    sa.Column('client_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('referer', sa.Text(), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('auth_method', sa.String(length=50), nullable=True),
    sa.Column('auth_success', sa.Boolean(), nullable=True),
    sa.Column('rate_limit_applied', sa.Boolean(), nullable=True),
    sa.Column('rate_limit_remaining', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('log_level', sa.String(length=20), nullable=True),
    sa.Column('activity_type', sa.String(length=50), nullable=True),
    sa.Column('extra_metadata', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_activity_type'), 'audit_logs', ['activity_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_api_key_id'), 'audit_logs', ['api_key_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_client_ip'), 'audit_logs', ['client_ip'], unique=False)
    op.create_index(op.f('ix_audit_logs_endpoint'), 'audit_logs', ['endpoint'], unique=False)
    op.create_index(op.f('ix_audit_logs_log_level'), 'audit_logs', ['log_level'], unique=False)
    op.create_index(op.f('ix_audit_logs_request_id'), 'audit_logs', ['request_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_session_id'), 'audit_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_email'), 'audit_logs', ['user_email'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('performance_metrics',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('metric_type', sa.String(length=100), nullable=False),
    sa.Column('metric_name', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=50), nullable=False),
    sa.Column('endpoint', sa.String(length=500), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('request_id', sa.String(length=255), nullable=True),
    sa.Column('extra_metadata', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_metrics_endpoint'), 'performance_metrics', ['endpoint'], unique=False)
    op.create_index(op.f('ix_performance_metrics_metric_name'), 'performance_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_performance_metrics_metric_type'), 'performance_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_performance_metrics_request_id'), 'performance_metrics', ['request_id'], unique=False)
    op.create_index(op.f('ix_performance_metrics_timestamp'), 'performance_metrics', ['timestamp'], unique=False)
    op.create_index(op.f('ix_performance_metrics_user_id'), 'performance_metrics', ['user_id'], unique=False)
    op.create_table('security_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=True),
    sa.Column('attempted_email', sa.String(length=255), nullable=True),
    sa.Column('request_id', sa.String(length=255), nullable=True),
    sa.Column('client_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('endpoint', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('action_taken', sa.String(length=100), nullable=True),
    sa.Column('automatic_response', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_security_events_attempted_email'), 'security_events', ['attempted_email'], unique=False)
    op.create_index(op.f('ix_security_events_client_ip'), 'security_events', ['client_ip'], unique=False)
    op.create_index(op.f('ix_security_events_event_type'), 'security_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_security_events_request_id'), 'security_events', ['request_id'], unique=False)
    op.create_index(op.f('ix_security_events_severity'), 'security_events', ['severity'], unique=False)
    op.create_index(op.f('ix_security_events_timestamp'), 'security_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_security_events_user_email'), 'security_events', ['user_email'], unique=False)
    op.create_index(op.f('ix_security_events_user_id'), 'security_events', ['user_id'], unique=False)
    op.create_table('user_activities',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=True),
    sa.Column('activity_type', sa.String(length=100), nullable=False),
    sa.Column('activity_name', sa.String(length=255), nullable=False),
    sa.Column('activity_description', sa.Text(), nullable=True),
    sa.Column('endpoint', sa.String(length=500), nullable=True),
    sa.Column('request_id', sa.String(length=255), nullable=True),
    sa.Column('activity_data', sa.JSON(), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activities_activity_type'), 'user_activities', ['activity_type'], unique=False)
    op.create_index(op.f('ix_user_activities_request_id'), 'user_activities', ['request_id'], unique=False)
    op.create_index(op.f('ix_user_activities_session_id'), 'user_activities', ['session_id'], unique=False)
    op.create_index(op.f('ix_user_activities_timestamp'), 'user_activities', ['timestamp'], unique=False)
    op.create_index(op.f('ix_user_activities_user_id'), 'user_activities', ['user_id'], unique=False)
    op.alter_column('invoices', 'invoice_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('invoices', 'due_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.create_unique_constraint(None, 'invoices', ['invoice_number'])
    op.create_foreign_key(None, 'invoices', 'subscriptions', ['subscription_id'], ['id'])
    op.drop_column('invoices', 'currency')
    op.create_foreign_key(None, 'pricing_config', 'users', ['created_by'], ['id'])
    op.alter_column('usage_logs', 'request_params',
               existing_type=sa.TEXT(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.create_foreign_key(None, 'weather_requests', 'api_keys', ['api_key_id'], ['id'])
    op.create_foreign_key(None, 'weather_requests', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'weather_requests', type_='foreignkey')
    op.drop_constraint(None, 'weather_requests', type_='foreignkey')
    op.alter_column('usage_logs', 'request_params',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'pricing_config', type_='foreignkey')
    op.add_column('invoices', sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'invoices', type_='foreignkey')
    op.drop_constraint(None, 'invoices', type_='unique')
    op.alter_column('invoices', 'due_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('invoices', 'invoice_date',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_user_activities_user_id'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_timestamp'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_session_id'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_request_id'), table_name='user_activities')
    op.drop_index(op.f('ix_user_activities_activity_type'), table_name='user_activities')
    op.drop_table('user_activities')
    op.drop_index(op.f('ix_security_events_user_id'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_user_email'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_timestamp'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_severity'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_request_id'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_event_type'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_client_ip'), table_name='security_events')
    op.drop_index(op.f('ix_security_events_attempted_email'), table_name='security_events')
    op.drop_table('security_events')
    op.drop_index(op.f('ix_performance_metrics_user_id'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_timestamp'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_request_id'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_metric_type'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_metric_name'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_endpoint'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_user_email'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_session_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_request_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_log_level'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_endpoint'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_client_ip'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_api_key_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_activity_type'), table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
