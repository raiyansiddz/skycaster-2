"""Add Skycaster pricing and weather request models

Revision ID: 92504e1229b5
Revises: 792079e929c2
Create Date: 2025-07-17 16:14:21.691771

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '92504e1229b5'
down_revision: Union[str, Sequence[str], None] = '792079e929c2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency_config',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('currency_code', sa.String(length=5), nullable=False),
    sa.Column('currency_symbol', sa.String(length=10), nullable=False),
    sa.Column('currency_name', sa.String(length=50), nullable=False),
    sa.Column('country_codes', sa.Text(), nullable=True),
    sa.Column('exchange_rate', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('currency_code')
    )
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'ADMIN', name='userrole'), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_verification_token', sa.String(), nullable=True),
    sa.Column('email_verification_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('password_reset_sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('variable_mapping',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('variable_name', sa.String(length=100), nullable=False),
    sa.Column('endpoint_type', sa.String(length=20), nullable=False),
    sa.Column('endpoint_url', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unit', sa.String(length=20), nullable=True),
    sa.Column('data_type', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('variable_name')
    )
    op.create_table('api_keys',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('total_requests', sa.Integer(), nullable=True),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_key'), 'api_keys', ['key'], unique=True)
    op.create_table('pricing_config',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('variable_name', sa.String(length=100), nullable=False),
    sa.Column('endpoint_type', sa.String(length=20), nullable=False),
    sa.Column('base_price', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=5), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=False),
    sa.Column('tax_enabled', sa.Boolean(), nullable=False),
    sa.Column('hsn_sac_code', sa.String(length=20), nullable=True),
    sa.Column('free_plan_price', sa.Float(), nullable=True),
    sa.Column('developer_plan_price', sa.Float(), nullable=True),
    sa.Column('business_plan_price', sa.Float(), nullable=True),
    sa.Column('enterprise_plan_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('variable_name')
    )
    op.create_table('subscriptions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('plan', sa.Enum('FREE', 'DEVELOPER', 'BUSINESS', 'ENTERPRISE', name='subscriptionplan'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'CANCELLED', 'PAST_DUE', 'INCOMPLETE', 'TRIALING', name='subscriptionstatus'), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('stripe_price_id', sa.String(), nullable=True),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('current_month_usage', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support_tickets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', name='ticketstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='ticketpriority'), nullable=False),
    sa.Column('assigned_to', sa.String(), nullable=True),
    sa.Column('resolution', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('subscription_id', sa.String(), nullable=True),
    sa.Column('invoice_number', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'OPEN', 'PAID', 'VOID', 'UNCOLLECTIBLE', name='invoicestatus'), nullable=False),
    sa.Column('stripe_invoice_id', sa.String(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(), nullable=True),
    sa.Column('subtotal', sa.Integer(), nullable=False),
    sa.Column('tax', sa.Integer(), nullable=True),
    sa.Column('total', sa.Integer(), nullable=False),
    sa.Column('amount_paid', sa.Integer(), nullable=True),
    sa.Column('amount_due', sa.Integer(), nullable=False),
    sa.Column('invoice_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('due_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('line_items', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('usage_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('api_key_id', sa.String(), nullable=False),
    sa.Column('endpoint', sa.String(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('request_params', sa.JSON(), nullable=True),
    sa.Column('request_headers', sa.JSON(), nullable=True),
    sa.Column('response_status', sa.Integer(), nullable=False),
    sa.Column('response_size', sa.Integer(), nullable=True),
    sa.Column('response_time', sa.Float(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weather_requests',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('api_key_id', sa.String(), nullable=False),
    sa.Column('locations', sa.Text(), nullable=False),
    sa.Column('variables', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.String(length=50), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('endpoints_called', sa.Text(), nullable=True),
    sa.Column('response_status', sa.Integer(), nullable=False),
    sa.Column('response_time', sa.Float(), nullable=False),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('total_cost', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=5), nullable=False),
    sa.Column('tax_applied', sa.Float(), nullable=False),
    sa.Column('final_amount', sa.Float(), nullable=False),
    sa.Column('ip_address', sa.String(length=50), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('country_code', sa.String(length=5), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['api_key_id'], ['api_keys.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('weather_requests')
    op.drop_table('usage_logs')
    op.drop_table('invoices')
    op.drop_table('support_tickets')
    op.drop_table('subscriptions')
    op.drop_table('pricing_config')
    op.drop_index(op.f('ix_api_keys_key'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_table('variable_mapping')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('currency_config')
    # ### end Alembic commands ###
